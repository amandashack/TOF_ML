-- Define lognormal distribution function
local math = require('math')
function lognormal(median, sigma, shift, min, max)
  return function()
    local value
    repeat
      local z = math.log(median)
      local x = z + sigma * math.sqrt(-2 * math.log(math.random()))
      value = math.exp(x) + shift
    until value >= min and value <= max
    return value
  end
end

function generate_radial_distribution(theta_max)
  local d = 406.7-24.4
  return function()
    local angle
    local radius_max = d * math.tan(theta_max * math.pi / 180)
    repeat
      local random_value = math.random() * radius_max
      angle = math.acos(random_value/radius_max) * theta_max^2 
    until angle >= 0 and angle <= theta_max
    return angle
  end
end

particles {
  coordinates = 0,
  standard_beam {
    n = 1000,
    tob = 0,
    mass = 0.000548579903,
    charge = -1,
    ke =  uniform_distribution {
      min = 0.1,
      max = 0.1
    },
    az =  single_value {0},
    el =  distribution(generate_radial_distribution(2.5)), 
    cwf = 1,
    color = 0,
    position =  sphere_distribution {
      center = vector(24.4, 0, 0),
      radius = 2,
      fill = true    }
  }
}